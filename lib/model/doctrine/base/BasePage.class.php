<?php

/**
 * BasePage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $parent_id
 * @property string $name
 * @property string $description
 * @property boolean $is_visible
 * @property boolean $show_on_homepage
 * @property boolean $is_featured
 * @property boolean $is_clickable
 * @property string $link
 * @property string $image
 * @property integer $lft
 * @property integer $rgt
 * @property integer $level
 * @property integer $sort_order
 * @property Page $Page
 * 
 * @method integer getId()               Returns the current record's "id" value
 * @method integer getParentId()         Returns the current record's "parent_id" value
 * @method string  getName()             Returns the current record's "name" value
 * @method string  getDescription()      Returns the current record's "description" value
 * @method boolean getIsVisible()        Returns the current record's "is_visible" value
 * @method boolean getShowOnHomepage()   Returns the current record's "show_on_homepage" value
 * @method boolean getIsFeatured()       Returns the current record's "is_featured" value
 * @method boolean getIsClickable()      Returns the current record's "is_clickable" value
 * @method string  getLink()             Returns the current record's "link" value
 * @method string  getImage()            Returns the current record's "image" value
 * @method integer getLft()              Returns the current record's "lft" value
 * @method integer getRgt()              Returns the current record's "rgt" value
 * @method integer getLevel()            Returns the current record's "level" value
 * @method integer getSortOrder()        Returns the current record's "sort_order" value
 * @method Page    getPage()             Returns the current record's "Page" value
 * @method Page    setId()               Sets the current record's "id" value
 * @method Page    setParentId()         Sets the current record's "parent_id" value
 * @method Page    setName()             Sets the current record's "name" value
 * @method Page    setDescription()      Sets the current record's "description" value
 * @method Page    setIsVisible()        Sets the current record's "is_visible" value
 * @method Page    setShowOnHomepage()   Sets the current record's "show_on_homepage" value
 * @method Page    setIsFeatured()       Sets the current record's "is_featured" value
 * @method Page    setIsClickable()      Sets the current record's "is_clickable" value
 * @method Page    setLink()             Sets the current record's "link" value
 * @method Page    setImage()            Sets the current record's "image" value
 * @method Page    setLft()              Sets the current record's "lft" value
 * @method Page    setRgt()              Sets the current record's "rgt" value
 * @method Page    setLevel()            Sets the current record's "level" value
 * @method Page    setSortOrder()        Sets the current record's "sort_order" value
 * @method Page    setPage()             Sets the current record's "Page" value
 * 
 * @package    easy
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('page');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('is_visible', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             'notnull' => true,
             ));
        $this->hasColumn('show_on_homepage', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             'notnull' => true,
             ));
        $this->hasColumn('is_featured', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => true,
             ));
        $this->hasColumn('is_clickable', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => true,
             ));
        $this->hasColumn('link', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('lft', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('rgt', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('level', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('sort_order', 'integer', 2, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Page', array(
             'local' => 'parent_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}